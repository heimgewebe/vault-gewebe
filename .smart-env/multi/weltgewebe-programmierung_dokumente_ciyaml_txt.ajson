
"smart_sources:weltgewebe-programmierung/dokumente/ciyaml.txt": {"path":"weltgewebe-programmierung/dokumente/ciyaml.txt","last_embed":{"hash":null},"embeddings":{},"last_read":{"hash":"1mxpm46","at":1757426318393},"class_name":"SmartSource","last_import":{"mtime":1757230821530,"size":8932,"at":1757426318396,"hash":"1mxpm46"},"blocks":{"#This workflow is an optimized version for a modern Bun/Turborepo setup.":[1,1],"#Key improvements:":[2,2],"#1. DRY Principle: Dependencies are installed only ONCE in the `setup` job.":[3,3],"#2. Reliability: Replaces fixed `sleep` with `wait-on` for robust server readiness checks.":[4,4],"#3. Efficiency: A smart caching strategy for `node_modules` and `.turbo` minimizes redundant work.":[5,14],"#3. Efficiency: A smart caching strategy for `node_modules` and `.turbo` minimizes redundant work.#{1}":[7,14],"#Cancel any in-progress runs for the same branch to save resources.":[15,19],"#Cancel any in-progress runs for the same branch to save resources.#{1}":[16,19],"#Centralize port and version definitions for consistency.":[20,26],"#Centralize port and version definitions for consistency.#{1}":[21,26],"#Job 0: Setup - The Foundation":[27,27],"#This job installs all dependencies and creates a cache that all subsequent jobs will use.":[28,28],"#It ensures `bun install` is run exactly once per commit.":[29,51],"#It ensures `bun install` is run exactly once per commit.#{1}":[30,51],"#This is the key optimization: we cache the result of `bun install`.":[52,55],"#This is the key optimization: we cache the result of `bun install`.#{1}":[53,55],"#Include root and workspace node_modules":[56,62],"#Include root and workspace node_modules#{1}":[57,62],"#Job 1 (Parallel): Lint, Typecheck, and Unit Tests":[63,63],"#These jobs run concurrently after `setup` completes, providing fast feedback.":[64,64],"#They all restore the cache from `setup` and DO NOT run `bun install` again.":[65,138],"#They all restore the cache from `setup` and DO NOT run `bun install` again.#{1}":[67,138],"#Job 2: Build":[139,139],"#This job runs only if all static analysis and tests pass.":[140,159],"#This job runs only if all static analysis and tests pass.#{1}":[141,159],"#Job 3 (Parallel): Post-Build Checks":[160,160],"#After a successful build, these jobs run concurrently to perform integration,":[161,161],"#accessibility, and security checks on the build artifacts.":[162,245],"#accessibility, and security checks on the build artifacts.#{1}":[164,245],"#Job 4: Summary - The Final Gate":[246,246],"#This job provides a single, clear success/failure signal for the entire pipeline.":[247,250],"#This job provides a single, clear success/failure signal for the entire pipeline.#{1}":[248,250],"#This `if` condition ensures this job runs regardless of upstream failures.":[251,265],"#This `if` condition ensures this job runs regardless of upstream failures.#{1}":[252,265]},"outlinks":[{"title":" \"${{ needs.smoke_api.result }}\" == \"success\" && \\\n                \"${{ needs.axe_ci.result }}\" == \"success\" && \\\n                \"${{ needs.security.result }}\" == \"success\" ","target":"\"${{ needs.smoke_api.result }}\" == \"success\" && \\\n                \"${{ needs.axe_ci.result }}\" == \"success\" && \\\n                \"${{ needs.security.result }}\" == \"success\"","line":256}]},