name: CI (smart PR)

on:
  pull_request_target:
    branches: [ main ]
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]
  merge_group: {}
  workflow_dispatch: {}

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      web:  ${{ steps.filter.outputs.web }}
      docs: ${{ steps.filter.outputs.docs }}
      api:  ${{ steps.filter.outputs.api }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            web:
              - 'apps/web/**'
              - 'package*.json'
              - '**/vite.config.*'
              - '**/svelte.config.*'
              - '.github/workflows/**'
            docs:
              - '**/*.md'
              - 'docs/**'
            api:
              - 'apps/api/**'
              - '.github/workflows/**'
              - 'ci/**'

  repo-lint:
    name: Repo – markdown & shell lint
    needs: changes
    if: needs.changes.outputs.docs == 'true' || github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}
      - name: Markdownlint
        run: |
          npm i -g markdownlint-cli@0.41.0
          git ls-files '*.md' | xargs -r markdownlint
      - name: ShellCheck
        run: |
          sudo apt-get update && sudo apt-get install -y shellcheck
          git ls-files '*.sh' | xargs -r shellcheck -x
      - name: Lychee link check
        uses: lycheeverse/lychee-action@v2
        with:
          args: --config .lychee.toml .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  api:
    name: API – build, fmt, clippy & test
    needs: changes
    if: needs.changes.outputs.api == 'true' || github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      CARGO_TERM_COLOR: always
    defaults:
      run:
        working-directory: apps/api
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - name: cargo fmt
        run: cargo fmt -- --check
      - name: cargo clippy
        run: cargo clippy -- -D warnings
      - name: cargo build
        run: cargo build --locked
      - name: cargo test
        run: cargo test --locked

  web-setup:
    name: Web – install deps
    needs: changes
    if: needs.changes.outputs.web == 'true' || github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: apps/web
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json
      - name: npm ci
        run: npm ci

  web-check:
    name: Web – typecheck (svelte-check)
    needs: web-setup
    if: needs.changes.outputs.web == 'true' || github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    timeout-minutes: 12
    defaults: { run: { working-directory: apps/web, shell: bash } }
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json
      - name: npm ci (restore cache)
        run: npm ci --prefer-offline --no-audit --no-fund
      - name: svelte-check
        run: npm run check

  web-build:
    name: Web – build
    needs: [web-check, changes]
    if: needs.changes.outputs.web == 'true' || github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    defaults: { run: { working-directory: apps/web, shell: bash } }
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json
      - name: npm ci (restore cache)
        run: npm ci --prefer-offline --no-audit --no-fund
      - name: build
        env:
          CI: true
        run: npm run build
