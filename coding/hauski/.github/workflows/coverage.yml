name: coverage
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - "crates/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/coverage.yml"
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  cov:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: Ensure vendor snapshot
        run: bash scripts/ensure-vendor.sh
      - name: Check vendor snapshot
        run: bash scripts/check-vendor.sh
      - name: Cache cargo + target
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: ${{ runner.os }}-cov-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov --locked --version 0.6.9
      - name: Run coverage (focused)
        env:
          # sufficient for llvm-cov; slightly faster than debuginfo=2
          RUSTFLAGS: "-C debuginfo=1"
        run: |
          # measure only the runtime-relevant crates
          PKGS="--package hauski-core --package hauski-indexd"
          cargo llvm-cov $PKGS --lcov --output-path lcov.info
      - name: Upload lcov
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lcov.info
          path: lcov.info
      # Coveralls optional â€“ ein-/auskommentieren je nach Bedarf:
      # - uses: coverallsapp/github-action@v2
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     path-to-lcov: lcov.info
